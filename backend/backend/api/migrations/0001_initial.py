# Generated by Django 5.1.7 on 2025-04-04 05:27

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=250)),
                ('email', models.EmailField(max_length=250, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('user_type', models.CharField(choices=[('member', 'Member'), ('trainer', 'Trainer'), ('admin', 'Admin')], default='member', max_length=10)),
                ('membership_type', models.CharField(blank=True, choices=[('basic', 'Basic'), ('premium', 'Premium')], max_length=10, null=True)),
                ('fitness_goal', models.CharField(blank=True, choices=[('weight_loss', 'Weight Loss'), ('weight_gain', 'Weight Gain'), ('general_fitness', 'General Fitness')], max_length=15, null=True)),
                ('specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('requires_password_reset', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_subscribed', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='api_users_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='api_users_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrainerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='profile')),
                ('address', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='profile')),
                ('address', models.TextField(blank=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('date_of_join', models.DateField(blank=True, null=True)),
                ('food_preference', models.CharField(blank=True, choices=[('veg', 'Vegetarian'), ('non_veg', 'Non-Vegetarian'), ('vegan', 'Vegan')], max_length=10, null=True)),
                ('medical_issues', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
